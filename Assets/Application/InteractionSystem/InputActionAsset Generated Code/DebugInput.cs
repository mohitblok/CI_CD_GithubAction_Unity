//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Resources/InteractionSystem/InputActionAssets/DebugInput/DebugInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace InputActionAssetCode
{
    public partial class @DebugInput : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @DebugInput()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""DebugInput"",
    ""maps"": [
        {
            ""name"": ""Debugging"",
            ""id"": ""1f0f3ec4-9aa3-451f-b3b9-46665b86969d"",
            ""actions"": [
                {
                    ""name"": ""ToggleAdminPanel"",
                    ""type"": ""Button"",
                    ""id"": ""e964d2e1-15ca-4f8f-bec2-843317501b44"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Two Modifiers"",
                    ""id"": ""5208c753-a347-4818-a781-fa38f15fb0d8"",
                    ""path"": ""TwoModifiers"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleAdminPanel"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier1"",
                    ""id"": ""93bc2d31-7a64-405d-97c9-73333cdf81e1"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleAdminPanel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""modifier2"",
                    ""id"": ""b611d343-e168-4d96-adc4-7e810b7f8feb"",
                    ""path"": ""<Keyboard>/alt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleAdminPanel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""85c2136c-b74c-42c0-a58d-a5e8b2a76131"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleAdminPanel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Two Modifiers"",
                    ""id"": ""20bb7f0f-d5c1-480c-aa44-a3ac16badbce"",
                    ""path"": ""TwoModifiers"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleAdminPanel"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier1"",
                    ""id"": ""e38e0015-8cd7-47ab-9b20-1ecea6dec7e9"",
                    ""path"": ""<XRController>{LeftHand}/thumbstickClicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleAdminPanel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""modifier2"",
                    ""id"": ""324173c6-4fcc-48db-a42c-0849e362c144"",
                    ""path"": ""<XRController>{RightHand}/thumbstickClicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleAdminPanel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""263397cb-bb05-49be-ba39-55c3ceec763f"",
                    ""path"": ""<XRController>/gripPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleAdminPanel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""78df3465-ae32-46ff-90cc-c5116bb18f28"",
                    ""path"": ""OneModifier"",
                    ""interactions"": ""Hold(duration=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleAdminPanel"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""895c7524-cc17-4943-a17d-25fe0e17fc26"",
                    ""path"": ""<XRController>{LeftHand}/joystickClicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleAdminPanel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""64d298db-2b7b-4b05-ba72-378b6057dfb3"",
                    ""path"": ""<XRController>{RightHand}/joystickClicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleAdminPanel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // Debugging
            m_Debugging = asset.FindActionMap("Debugging", throwIfNotFound: true);
            m_Debugging_ToggleAdminPanel = m_Debugging.FindAction("ToggleAdminPanel", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Debugging
        private readonly InputActionMap m_Debugging;
        private IDebuggingActions m_DebuggingActionsCallbackInterface;
        private readonly InputAction m_Debugging_ToggleAdminPanel;
        public struct DebuggingActions
        {
            private @DebugInput m_Wrapper;
            public DebuggingActions(@DebugInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @ToggleAdminPanel => m_Wrapper.m_Debugging_ToggleAdminPanel;
            public InputActionMap Get() { return m_Wrapper.m_Debugging; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(DebuggingActions set) { return set.Get(); }
            public void SetCallbacks(IDebuggingActions instance)
            {
                if (m_Wrapper.m_DebuggingActionsCallbackInterface != null)
                {
                    @ToggleAdminPanel.started -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnToggleAdminPanel;
                    @ToggleAdminPanel.performed -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnToggleAdminPanel;
                    @ToggleAdminPanel.canceled -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnToggleAdminPanel;
                }
                m_Wrapper.m_DebuggingActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @ToggleAdminPanel.started += instance.OnToggleAdminPanel;
                    @ToggleAdminPanel.performed += instance.OnToggleAdminPanel;
                    @ToggleAdminPanel.canceled += instance.OnToggleAdminPanel;
                }
            }
        }
        public DebuggingActions @Debugging => new DebuggingActions(this);
        public interface IDebuggingActions
        {
            void OnToggleAdminPanel(InputAction.CallbackContext context);
        }
    }
}
